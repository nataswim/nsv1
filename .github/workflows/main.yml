name: NataSwim CI/CD

on:
  push:
    branches:
      - "main"

jobs:
  tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Docker
        uses: hoverkraft-tech/compose-action@v2.0.1

      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

      - name: Database migrate
        run: docker exec laravel-docker bash -c "php artisan migrate --force"

      - name: Database seeding
        run: docker exec laravel-docker bash -c "php artisan db:seed --force"

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm install
        working-directory: back

  build-and-push-image-api-prod:
    needs:
      - tests
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          build-args: |
            "MODE=prod"
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/nataswim-backend:latest
            ghcr.io/${{ github.repository_owner }}/nataswim-backend:${{ github.sha }}

  build-and-push-image-frontend-prod:
    needs:
      - tests
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          build-args: |
            "MODE=prod"
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/nataswim-frontend:latest
            ghcr.io/${{ github.repository_owner }}/nataswim-frontend:${{ github.sha }}

  deploy:
    needs:
      - build-and-push-image-api-prod
      - build-and-push-image-frontend-prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@168.231.107.219 '
            mkdir -p /root/nataswim
            cd /root/nataswim
            
            # Créer ou mettre à jour le fichier docker-stack.yml
            cat > docker-stack.yml << EOL
            services:
              laravel-docker:
                image: ghcr.io/${{ github.repository_owner }}/nataswim-backend:latest
                ports:
                  - "8000:80"
                volumes:
                  - /data/storage:/var/www/app/storage
                depends_on:
                  - mysql_db
            
              react-docker:
                image: ghcr.io/${{ github.repository_owner }}/nataswim-frontend:latest
                ports:
                  - "8080:80"
            
              mysql_db:
                image: mysql:8.0
                environment:
                  MYSQL_ROOT_PASSWORD: root
                  MYSQL_DATABASE: laravel
                ports:
                  - "3306:3306"
                volumes:
                  - /data/mysql:/var/lib/mysql
            EOL
            
            # Se connecter au registre GitHub
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            
            # Déployer les conteneurs
            docker-compose -f docker-stack.yml down
            docker-compose -f docker-stack.yml pull
            docker-compose -f docker-stack.yml up -d
            
            # Exécuter les migrations
            sleep 10
            docker exec $(docker ps --filter "name=laravel-docker" --format "{{.ID}}") php artisan migrate --force
          '